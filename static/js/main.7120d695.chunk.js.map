{"version":3,"sources":["links/Links.module.scss","HT-1-message/message.module.scss","HT-2-todolist/Task.module.scss","HT-6-Local-Storage/Hometask6.module.scss","HT-3-input/Input.module.scss","HT-8-Reducers/Reducer.module.scss","common/button/ButtonComponent.module.scss","HT-4-EditebleSpan/Hometask4.module.scss","HT-2-todolist/Todolist.module.scss","common/editeble-span/EditebleSpan.module.scss","common/input/InputComponent.module.scss","common/Range/range.module.scss","assets/images/background.jpg","HT-2-todolist/Filter.module.scss","HT-7-Select/Hometask7.module.scss","HT-9-time/Time.module.scss","HT-10-Loading/Loading.module.scss","HT-11-Range/RangeHometask.module.scss","HT-1-message/Message.tsx","links/Links.tsx","common/input/Input.tsx","common/editeble-span/EditebleSpan.tsx","HT-2-todolist/Task.tsx","common/button/Button.tsx","HT-2-todolist/FIlter.tsx","HT-2-todolist/Todolist.tsx","HT-3-input/InputHT.tsx","HT-4-EditebleSpan/Hometask4.tsx","HT-6-Local-Storage/Hometask-6.tsx","common/select/Select.tsx","common/radio/Radio.tsx","HT-7-Select/Hometask7.tsx","reducers/WorkReducer.ts","HT-8-Reducers/Reducer.tsx","HT-9-time/Time.tsx","reducers/homework10-reducer.ts","HT-10-Loading/Loading.tsx","common/Range/Range.tsx","common/DoubleRange.tsx","HT-11-Range/RangeHometask.tsx","App.tsx","serviceWorker.ts","store/store.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","createStyles","root","display","margin","spacing","small","width","height","large","backgroundColor","background","Message","props","classes","className","styleMessage","container","Avatar","src","avatar","text","name","message","respond","href","time","Links","styleLinks","linksItem","activeClassName","activeLink","to","Input","React","memo","onChangeHandler","useCallback","e","currentTarget","value","onKeyPressHandler","charCode","placeholder","onChange","onKeyPress","onBlur","errorStyle","styleInputComponent","inputError","input","EditebleSpan","useState","editMode","setEditMode","activateEditMode","activateViewMode","styleEditebleSpan","span","onDoubleClick","Task","title","setTitle","styleTask","task","importance","deleteButton","button","onClick","deleteTask","Button","onClickHandler","onClickFunction","styleButton","deletestyle","buttonDelete","buttonRegular","Filter","styleFilter","filter","changeFilter","Todolist","id","v1","tasks","setTasks","setFilter","t","styleTodolist","todolist","tasksContainer","map","key","filtredTasks","removeTask","InputHT","error","setError","hello","trim","alert","styleInput","content","Hometask4","style","Hometask6","stylesHometask6","editableSpan","buttonsContainer","addButton","state","stateAsString","JSON","stringify","localStorage","setItem","saveState","x","y","getButton","defaultState","getItem","parse","restoreState","Select","styleSelect","data","el","Radio","styleRadio","type","checked","htmlFor","Hometask7","selected","selectData","setSelectData","radioData","setRadioData","styleHometask7","newArr","WorkReducer","action","payload","sort","a","b","age","i","ReducerHT","useReducer","dispatchToState","moment","format","elementContainer","element","Time","timerId","setTimerId","Date","date","setDate","styles","toString","clearInterval","timer_id","setInterval","initialState","loading","Loading","dispatch","useDispatch","useSelector","homework10","off","setTimeout","CircularProgress","color","Range","screen","min","max","step","valuetext","DoubleRangeSlider","Typography","gutterBottom","Slider","handleChange","valueLabelDisplay","aria-labelledby","getAriaValueText","RangeHometask","setValue","value1","setValue2","event","newValue","Number","parseInt","App","backgroundImage","path","render","Boolean","window","location","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7120d695.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Links_container__35h6y\",\"linksItem\":\"Links_linksItem__1_GWB\",\"activeLink\":\"Links_activeLink__3seTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"message_container__1bPvL\",\"avatar\":\"message_avatar__2eM8y\",\"text\":\"message_text__rf79k\",\"name\":\"message_name__kUIxG\",\"message\":\"message_message__3ZRss\",\"respond\":\"message_respond___kIZo\",\"time\":\"message_time__3Ooiv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__3N9Qg\",\"container\":\"Task_container__qFd_p\",\"importance\":\"Task_importance__3GhF5\",\"taskMessage\":\"Task_taskMessage__2dhyK\",\"button\":\"Task_button__3n0-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hometask6_container__2NVvG\",\"buttonsContainer\":\"Hometask6_buttonsContainer__1hhlp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Input_container__2UKWr\",\"content\":\"Input_content__1oogB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Reducer_container__s_9zI\",\"elementContainer\":\"Reducer_elementContainer__3YcXM\",\"element\":\"Reducer_element__qdVKE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonRegular\":\"ButtonComponent_buttonRegular__rTsXw\",\"buttonDelete\":\"ButtonComponent_buttonDelete__3fL8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hometask4_container__2PNI2\",\"button\":\"Hometask4_button__1awd1\",\"input\":\"Hometask4_input__BQIop\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todolist\":\"Todolist_todolist__2C57r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"span\":\"EditebleSpan_span__36gTB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InputComponent_input__l6FWg\",\"inputError\":\"InputComponent_inputError__2pDa8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"range_screen__zHMYr\"};","module.exports = __webpack_public_path__ + \"static/media/background.9f27236c.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__16w9R\",\"button\":\"Filter_button__1CvHN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hometask7_container__2O407\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Time_container__3jjyN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loading_container__3J12r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RangeHometask_container__2vN-f\"};","import React from 'react';\r\nimport styleMessage from './message.module.scss'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {orange} from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            '& > *': {\r\n                margin: theme.spacing(1),\r\n            },\r\n        },\r\n        small: {\r\n            width: theme.spacing(3),\r\n            height: theme.spacing(3),\r\n        },\r\n        large: {\r\n            width: theme.spacing(9),\r\n            height: theme.spacing(9),\r\n        },\r\n        backgroundColor: {\r\n            background: 'purple'\r\n        }\r\n    }),\r\n);\r\nexport type Message = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string\r\n    time: string\r\n}\r\n\r\n\r\nconst Message = (props:Message) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={styleMessage.container}>\r\n\r\n            <Avatar src=\"./assets/images/background.jpg\"  className={classes.large}>{props.avatar}</Avatar>\r\n\r\n            <div className={styleMessage.text}>\r\n                <div className={styleMessage.name}>{props.name}</div>\r\n                <div className={styleMessage.message}>{props.message}</div>\r\n            </div>\r\n            <div className={styleMessage.respond}>\r\n                <a href={'/'}>RESPOND</a>\r\n            </div>\r\n            <div className={styleMessage.time}>\r\n                {props.time}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\nimport styleLinks from './Links.module.scss'\nimport {NavLink} from \"react-router-dom\";\n\n\nfunction Links(props:any) {\n\n  return (\n    <div className={styleLinks.container}>\n        <div className={styleLinks.linksItem}><NavLink activeClassName={styleLinks.activeLink} to={'/homework1'}>Homework 1</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink activeClassName={styleLinks.activeLink} to={'/homework2'}>Homework 2</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink activeClassName={styleLinks.activeLink} to={'/homework3'}>Homework 3</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink activeClassName={styleLinks.activeLink} to={'/homework4'}>Homework 4</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink to={'/'}>Homework 5</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink activeClassName={styleLinks.activeLink} to={'/homework6'}>Homework 6</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink activeClassName={styleLinks.activeLink} to={'/homework7'}>Homework 7</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink activeClassName={styleLinks.activeLink} to={'/homework8'}>Homework 8</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink activeClassName={styleLinks.activeLink} to={'/homework9'}>Homework 9</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink activeClassName={styleLinks.activeLink} to={'/homework10'}>Homework 10</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink activeClassName={styleLinks.activeLink} to={'/homework11'}>Homework 11</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink to={'/'}>Homework 12</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink to={'/'}>Homework 13</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink to={'/'}>Homework 14</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink to={'/'}>Homework 15</NavLink></div>\n        <div className={styleLinks.linksItem}><NavLink to={'/'}>Homework 16</NavLink></div>\n    </div>\n  );\n}\n\nexport default Links;\n","import React, {ChangeEvent, KeyboardEvent, useCallback} from 'react';\r\nimport styleInputComponent from './InputComponent.module.scss'\r\n\r\nexport type InputPropsType = {\r\n    onChangeHandler: (value: string) => void\r\n    onKeyPressHandler: () => void\r\n    value?: string\r\n    placeholder?: string\r\n    errorStyle: boolean\r\n    onBlur?: () => void\r\n}\r\n\r\n\r\n\r\nexport const Input = React.memo((props:InputPropsType) => {\r\n        const onChangeHandler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n            props.onChangeHandler(e.currentTarget.value)\r\n        }, [])\r\n        const onKeyPressHandler = useCallback((e: KeyboardEvent<HTMLInputElement>) => {\r\n            if(e.charCode === 13){\r\n                props.onKeyPressHandler()\r\n            }\r\n        }, [])\r\n\r\n\r\n\r\n        return (\r\n            <div>\r\n                <input placeholder={props.placeholder}\r\n                       onChange={onChangeHandler}\r\n                       onKeyPress={onKeyPressHandler}\r\n                       onBlur={props.onBlur}\r\n                       value={props.value}\r\n                       className={!props.errorStyle ? styleInputComponent.input : styleInputComponent.inputError}/>\r\n            </div>\r\n        )\r\n    }\r\n)\r\nexport default Input","import React, {useCallback, useState} from \"react\";\r\nimport styleEditebleSpan from './EditebleSpan.module.scss'\r\nimport Input from \"../input/Input\";\r\n\r\nexport type EditebleSpanType = {\r\n    onChangeHandler: (value: string) => void\r\n    onKeyPressHandler: () => void\r\n    value: string\r\n    errorStyle: boolean\r\n}\r\n\r\nconst EditebleSpan = React.memo((props:EditebleSpanType) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const activateEditMode = useCallback(() => {\r\n        setEditMode(true);\r\n    }, [])\r\n    const activateViewMode = useCallback(() => {\r\n        setEditMode(false);\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styleEditebleSpan.container}>\r\n            {\r\n                editMode\r\n                    ? <Input onBlur={activateViewMode}\r\n                             onChangeHandler={props.onChangeHandler}\r\n                             value={props.value}\r\n                             errorStyle={props.errorStyle}\r\n                             onKeyPressHandler={props.onKeyPressHandler}\r\n\r\n                    />\r\n                    : <span className={styleEditebleSpan.span}\r\n                            onDoubleClick={activateEditMode}\r\n\r\n                    >{props.value}</span>\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default EditebleSpan","import React, {useState} from 'react';\nimport styleTask from './Task.module.scss'\nimport {TaskType} from \"./Todolist\";\nimport EditebleSpan from \"../common/editeble-span/EditebleSpan\";\n\n\nfunction Task(props: TaskType) {\n\n    const [title, setTitle] = useState(props.title)\n\n    const onChangeHandler = (value: string) => {\n        setTitle(value)\n    }\n\n\n    return (\n        <div className={styleTask.task}>\n            <div className={styleTask.container}>\n                {\n                    props.importance ? <div className={styleTask.importance}>!!!</div> : <div className={styleTask.importance}>!</div>\n                }\n\n                {/*<div className={styleTask.taskMessage}>{props.title}</div>*/}\n                <EditebleSpan onChangeHandler={onChangeHandler} onKeyPressHandler={()=>{}} value={title} errorStyle={false}/>\n                <div className={styleTask.deleteButton}>\n                    <button className={styleTask.button} onClick={props.deleteTask}>Del</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Task;\n","import React, {useCallback} from 'react';\r\nimport styleButton from './ButtonComponent.module.scss'\r\n\r\ntype ButtonType = {\r\n    title: string\r\n    deletestyle:boolean\r\n    onClickFunction: () => void\r\n}\r\n\r\nconst Button = React.memo((props:ButtonType) => {\r\n\r\n    const onClickHandler = useCallback(() => {\r\n        props.onClickFunction()\r\n    }, [])\r\n\r\n    return (\r\n        <div className={styleButton.button}>\r\n            <button onClick={onClickHandler}\r\n                    className={!props.deletestyle\r\n                        ? styleButton.buttonRegular\r\n                        : styleButton.buttonDelete}\r\n            >{props.title}</button>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Button","import React from 'react';\nimport styleFilter from './Filter.module.scss'\nimport Button from \"../common/button/Button\";\n\n\n\nfunction Filter(props: any) {\n\n    const onAllClickFilter = () => {\n        props.changeFilter('all')\n    }\n    const onImportantClickFilter = () => {\n        props.changeFilter('important')\n    }\n    const onUnImportantClickFilter = () => {\n        props.changeFilter('unimportant')\n    }\n\n    return (\n        <div className={styleFilter.filter}>\n            <Button title={'all'} deletestyle={false} onClickFunction={onAllClickFilter}/>\n            <Button title={'important'} deletestyle={false} onClickFunction={onImportantClickFilter}/>\n            <Button title={'unimportant'} deletestyle={false} onClickFunction={onUnImportantClickFilter}/>\n        </div>\n    );\n}\n\nexport default Filter;\n","import React, {useState} from 'react';\nimport styleTodolist from './Todolist.module.scss'\nimport Task from \"./Task\";\nimport {v1} from \"uuid\";\nimport Filter from \"./FIlter\";\n\n\nexport type TaskType = {\n    id: string\n    title: string\n    importance: boolean\n    deleteTask: () => void\n}\nexport type FilterValueType = 'all' | 'important' | 'unimportant'\n\n\nfunction Todolist(props: any) {\n\n\n    let [tasks, setTasks] = useState([\n        {id: v1(), title: \"HTML&CSS\", importance: true},\n        {id: v1(), title: \"JS\", importance: false},\n        {id: v1(), title: \"ReactJS\", importance: false},\n        {id: v1(), title: \"rest api\", importance: true},\n        {id: v1(), title: \"graphQL\", importance: false},\n    ])\n\n\n    let [filter, setFilter] = useState<FilterValueType>('all')\n\n\n\n    if (filter ==='important') {\n        tasks = tasks.filter(t => t.importance === true)\n    }\n    if (filter ==='unimportant') {\n        tasks = tasks.filter(t => t.importance === false)\n    }\n\n    function changeFilter(value: FilterValueType) {\n        setFilter(value)\n    }\n    function removeTask(id: string) {\n        let filtredTasks = tasks.filter(t => t.id !== id)\n        setTasks(filtredTasks)\n    }\n\n\n    return (\n        <div className={styleTodolist.todolist}>\n            <div className={styleTodolist.tasksContainer}>\n                {\n                    tasks.map(t => {\n                        const onRemoveHandler = () => removeTask(t.id)\n                        return (\n                            <Task\n                                key={t.id}\n                                id={t.id}\n                                title={t.title}\n                                importance={t.importance}\n                                deleteTask={onRemoveHandler}\n                            />\n                        )\n                    })\n                }\n            </div>\n\n            <Filter changeFilter={changeFilter}/>\n        </div>\n    );\n}\n\nexport default Todolist;\n","import React, {ChangeEvent, useState} from 'react';\nimport styleInput from './Input.module.scss'\nimport {Input} from \"../common/input/Input\";\nimport Button from \"../common/button/Button\";\n\n\n\nfunction InputHT(props: any) {\n\n\n    const [title, setTitle] = useState(\"\")\n    const [error, setError] = useState(false)\n\n    const onChangeHandler = (value: string) => {\n        setTitle(value)\n    }\n\n    const hello = () => {\n        if (title.trim()) {\n            setError(false)\n            alert('Hello ' + title.trim() + ' !')\n            setTitle('')\n        } else {\n            setError(true)\n            alert('Type something')\n        }\n\n    }\n\n    const onKeyPressHandler = () => {\n            hello();\n    }\n\n    return (\n        <div className={styleInput.container}>\n            <div className={styleInput.content}>\n                <div className={styleInput.input}>\n                    <Input value={title}\n                           onChangeHandler={onChangeHandler}\n                           placeholder={'Type your name...'}\n                           onKeyPressHandler={onKeyPressHandler}\n                           errorStyle={error}\n                    />\n                </div>\n                <div className={styleInput.button}>\n                    <Button onClickFunction={hello}\n                            deletestyle={error}\n                            title={'+'}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default InputHT;\n","import React, {useState} from \"react\";\r\nimport EditebleSpan from \"../common/editeble-span/EditebleSpan\";\r\nimport style from './Hometask4.module.scss'\r\nimport Input from \"../common/input/Input\";\r\nimport Button from \"../common/button/Button\";\r\n\r\ntype HomeTask4Type = {\r\n\r\n}\r\n\r\nexport const Hometask4 = (props: HomeTask4Type) => {\r\n\r\n    const [title, setTitle] = useState(\"INPUT\")\r\n    const [error, setError] = useState<boolean>(false)\r\n\r\n    const onChangeHandler = (value: string) => {\r\n        setTitle(value)\r\n    }\r\n    const onKeyPressHandler = () => {\r\n        alert('You have pressed enter')\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.container}>\r\n               <div className={style.button}>\r\n                   <Button title={\"button example\"} deletestyle={false} onClickFunction={()=>{}}/>\r\n               </div>\r\n               <div className={style.input}>\r\n                   <Input onChangeHandler={onChangeHandler}\r\n                          onKeyPressHandler={onKeyPressHandler}\r\n                          errorStyle={false}\r\n                          placeholder={'input example...'}\r\n                   />\r\n               </div>\r\n           </div>\r\n\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport EditebleSpan from \"../common/editeble-span/EditebleSpan\";\r\nimport Button from \"../common/button/Button\";\r\nimport stylesHometask6 from './Hometask6.module.scss'\r\n\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\nexport const Hometask6 = (props:any) => {\r\n\r\n    function saveState<T> (key: string, state: T) {\r\n        const stateAsString = JSON.stringify(state);\r\n        localStorage.setItem(key, stateAsString)\r\n    }\r\n\r\n    function restoreState<T>(key: string, defaultState: T) {\r\n        const stateAsString = localStorage.getItem(key);\r\n        if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n        return defaultState;\r\n    }\r\n\r\n    const [title, setTitle] = useState('Editable Span')\r\n\r\n    const onChangeHandler = (value: string) => {\r\n        setTitle(value)\r\n    }\r\n\r\n    let addToLocalStorageTitle = 'Add'\r\n    const addToLocalStorageOnClick = () => {\r\n        saveState<StateType>(\"test\", {x: title, y: 1})\r\n    }\r\n\r\n    let getFromToLocalStorageTitle = 'Get'\r\n    const getFromToLocalStorageOnClick = () => {\r\n        let state: StateType = restoreState<StateType>(\"test\", {x: \"A\", y: 0})\r\n        setTitle(state.x)\r\n    }\r\n\r\n    return (\r\n        <div className={stylesHometask6.container}>\r\n            <div className={stylesHometask6.editableSpan}>\r\n                <EditebleSpan onChangeHandler={onChangeHandler}\r\n                              onKeyPressHandler={()=>{}}\r\n\r\n                              value={title}\r\n                              errorStyle={false}/>\r\n            </div>\r\n            <div className={stylesHometask6.buttonsContainer}>\r\n                <div className={stylesHometask6.addButton}>\r\n                    <Button title={addToLocalStorageTitle}\r\n                            deletestyle={false}\r\n                            onClickFunction={addToLocalStorageOnClick}/>\r\n                </div>\r\n                <div className={stylesHometask6.getButton}>\r\n                    <Button title={getFromToLocalStorageTitle}\r\n                            deletestyle={false}\r\n                            onClickFunction={getFromToLocalStorageOnClick}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useCallback} from 'react'\r\nimport styleSelect from './Select.module.scss'\r\nimport {SelectDataType} from \"../../HT-7-Select/Hometask7\";\r\n\r\ntype SelectPropsType = {\r\n    data: SelectDataType\r\n    onChange: (value:string) => void\r\n    checked: boolean\r\n}\r\n\r\nexport const Select = React.memo((props: SelectPropsType) => {\r\n\r\n    const onChangeHandler = useCallback((e:ChangeEvent<HTMLSelectElement>) => {\r\n        props.onChange(e.currentTarget.value)\r\n    }, [])\r\n    return (\r\n        <div className={styleSelect.container}>\r\n            <select onChange={onChangeHandler}>\r\n                {\r\n                    props.data.map((el:any) => <option value={el.value}>{el.value}</option>)\r\n                }\r\n            </select>\r\n        </div>\r\n    )\r\n})","import React, {ChangeEvent, useCallback} from \"react\";\r\nimport {RadioDataType} from \"../../HT-7-Select/Hometask7\";\r\nimport styleRadio from './Radio.module.scss'\r\n\r\ntype RadioPropsType = {\r\n    value: RadioDataType\r\n    onChange: (value: string) => void\r\n}\r\n\r\nexport const Radio = React.memo((props:RadioPropsType) => {\r\n\r\n    const onChangeHandler = useCallback((e: any) => {\r\n        props.onChange(e.currentTarget.value)\r\n        //props.onChange(e.currentTarget.checked)\r\n    },[])\r\n\r\n    return (\r\n        <div className={styleRadio.container}>\r\n            {\r\n                props.value.map((el) => {\r\n                    return (\r\n                        <div>\r\n                            <input type={'radio'}\r\n                                   key={el.id}\r\n                                   name={el.name}\r\n                                   onChange={onChangeHandler}\r\n                                   id={el.id}\r\n                                   value={el.value}\r\n                                   checked={el.checked}\r\n\r\n                            />\r\n                            <label htmlFor={el.id}>{el.value}</label>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\n/*\r\n<input type=\"radio\" id=\"contactChoice1\"\r\n       name=\"contact\" value=\"email\">\r\n    <label htmlFor=\"contactChoice1\">Email</label>\r\n\r\n    <input type=\"radio\" id=\"contactChoice2\"\r\n           name=\"contact\" value=\"phone\">\r\n        <label htmlFor=\"contactChoice2\">Phone</label>*/\r\n","import React, {useState} from 'react'\r\nimport {Select} from \"../common/select/Select\";\r\nimport styleHometask7 from './Hometask7.module.scss'\r\nimport {Radio} from \"../common/radio/Radio\";\r\n\r\ntype SelectValueDataType = {\r\n    value: string\r\n    selected: boolean\r\n}\r\ntype RadioValueDataType = {\r\n    value: string\r\n    name: string\r\n    id: string\r\n    checked: boolean\r\n}\r\n\r\nexport type SelectDataType = Array<SelectValueDataType>\r\nexport type RadioDataType =  Array<RadioValueDataType>\r\n\r\nexport const Hometask7 = () => {\r\n\r\n    let [selectData, setSelectData] = useState([\r\n        {value: 'Vik', selected: true},\r\n        {value: 'Dava', selected: false},\r\n        {value: 'Vlad', selected: false}\r\n    ])\r\n\r\n    let [radioData, setRadioData] = useState<Array<RadioValueDataType>>([\r\n        {value: '1', name: 'number1', id: '1', checked: true},\r\n        {value: '2', name: 'number1', id: '2', checked: false},\r\n        {value: '3', name: 'number1', id: '3', checked: false}\r\n        ])\r\n\r\n\r\n    const onChangeSelectHandler = (value: string) => {\r\n        let newArr = selectData.map( (el)=> {\r\n            if(el.value === value) {\r\n                return {...el, selected: true}\r\n            } else {\r\n                return {...el, selected: false}\r\n            }\r\n        } )\r\n        setSelectData(newArr)\r\n    }\r\n    const onChangeRadioHandler = (value: string) => {\r\n        let newArr = radioData.map( (el)=> {\r\n            if(el.value === value) {\r\n                return {...el, checked: true}\r\n            } else {\r\n                return {...el, checked: false}\r\n            }\r\n        } )\r\n        setRadioData(newArr)\r\n\r\n    }\r\n\r\n   return (\r\n       <div className={styleHometask7.container}>\r\n            <Select data={selectData}\r\n                    onChange={onChangeSelectHandler}\r\n                    checked={false}\r\n            />\r\n            <Radio value={radioData}\r\n                   onChange={onChangeRadioHandler}\r\n\r\n            />\r\n       </div>\r\n   )\r\n}","\r\nexport type SortActionType = {\r\n    type: \"SORT\"\r\n    payload: string\r\n}\r\nexport type CheckActionType = {\r\n    type: \"CHECK\"\r\n    payload: string\r\n}\r\n\r\nexport type ActionType = CheckActionType | SortActionType\r\n\r\nexport const WorkReducer = (state: Array<{ id: string, name: string, age: number }>, action: { type: string, payload: any }) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case \"SORT\": {\r\n            if (action.payload === 'up') {\r\n                let copy = [...state]\r\n                let a = copy.sort((a, b) => {\r\n                        if (a.age > b.age) {\r\n                            return 1;\r\n                        }\r\n                        if (a.age < b.age) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    }\r\n                )\r\n                return a\r\n            } else {\r\n                let copy = [...state]\r\n                let a = copy.sort((a, b) => {\r\n                        if (a.age < b.age) {\r\n                            return 1;\r\n                        }\r\n                        if (a.age > b.age) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    }\r\n                )\r\n                return a\r\n            }\r\n        }\r\n        case \"CHECK\": {\r\n            return [...state.filter(i => i.age > 18)]\r\n\r\n        }\r\n        default:\r\n            return [];\r\n    }\r\n};\r\n\r\nexport const sortUP = (): ActionType => {\r\n    return  {type: 'SORT', payload: 'up'}\r\n}\r\nexport const sortDOWN = (): ActionType => {\r\n    return  {type: 'SORT', payload: 'down'}\r\n}\r\nexport const check = (): CheckActionType => {\r\n    return  {type: 'CHECK', payload: ''}\r\n}","import React, {useReducer} from \"react\";\r\nimport style from './Reducer.module.scss'\r\nimport Button from \"../common/button/Button\";\r\nimport {check, sortDOWN, sortUP, WorkReducer} from \"../reducers/WorkReducer\";\r\nimport moment from \"moment\";\r\n\r\ntype PersonType = {\r\n    id: string\r\n    name: string\r\n    age: number\r\n}\r\n\r\nexport const ReducerHT = () => {\r\n\r\n    let [state, dispatchToState] = useReducer(WorkReducer, [\r\n        {id: \"1\", name: \"Viktor\", age: 32},\r\n        {id: \"2\", name: \"Ann\", age: 14},\r\n        {id: \"3\", name: \"Ziberta\", age: 20}\r\n    ])\r\n\r\n\r\n\r\n    const incHandler = () => {\r\n        dispatchToState(sortUP())\r\n    }\r\n\r\n    const decHandler = () => {\r\n        dispatchToState(sortDOWN())\r\n    }\r\n\r\n    const sortHandler = () => {\r\n        dispatchToState(check())\r\n    }\r\n\r\n    let time = moment().format('MMMM Do YYYY, h:mm:ss a');\r\n    return (\r\n        <div className={style.container}>\r\n\r\n            {state.map((e:PersonType) => (\r\n                <div className={style.elementContainer}>\r\n                    <div className={style.element}>{e.name}</div>\r\n                    <div className={style.element}>{e.age}</div>\r\n                </div>\r\n            ))}\r\n            <Button title={'INC'} deletestyle={false} onClickFunction={incHandler}/>\r\n            <Button title={'DEC'} deletestyle={false} onClickFunction={decHandler}/>\r\n            <Button title={'SORT'} deletestyle={false} onClickFunction={sortHandler}/>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport moment from \"moment\";\r\nimport styles from './Time.module.scss'\r\nimport Button from \"../common/button/Button\";\r\n\r\nexport const Time = () => {\r\n\r\n    const [timerId, setTimerId] = useState();\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    const onClickStartTime = () => {\r\n        clearInterval(timerId); // останавливает предыдущий таймер\r\n        const timer_id = setInterval(() => setDate(new Date()), 1000);\r\n        setTimerId(timer_id);\r\n    }\r\n    const onClickStopTime = () => clearInterval(timerId)\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div>\r\n                {date.toString()}\r\n            </div>\r\n            <Button title={\"REFRESH\"} deletestyle={false} onClickFunction={onClickStartTime}/>\r\n            <Button title={\"STOP\"} deletestyle={false} onClickFunction={onClickStopTime}/>\r\n        </div>\r\n    )\r\n}","type initialStateType = {\r\n    loading: boolean\r\n}\r\n\r\ntype SetLoadingActionType = {\r\n    type: \"SET_LOADING\"\r\n    loading: boolean\r\n}\r\n\r\ntype Homework10ReducerActionType = SetLoadingActionType\r\n\r\nconst initialState = {loading: false}\r\n\r\nexport const Homework10Reducer = (state: initialStateType = initialState, action: Homework10ReducerActionType) => {\r\n    switch (action.type) {\r\n        case \"SET_LOADING\":\r\n            return {...state, loading: action.loading}\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setLoading = (loading: boolean): SetLoadingActionType => ({type: \"SET_LOADING\", loading: true})\r\nexport const setLoadingOff = (loading: boolean): SetLoadingActionType => ({type: \"SET_LOADING\", loading: false})\r\n","import React from \"react\";\r\nimport style from './Loading.module.scss'\r\nimport Button from \"../common/button/Button\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../store/store\";\r\nimport {setLoading, setLoadingOff} from \"../reducers/homework10-reducer\";\r\n\r\nexport const Loading = (props:any) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const loading = useSelector<AppRootStateType, boolean>(state => state.homework10.loading)\r\n\r\n    const on = () => {\r\n        dispatch(setLoading(true))\r\n    }\r\n\r\n    const off = () => {\r\n        dispatch(setLoadingOff(false))\r\n    }\r\n\r\n    const buttonOnclickHandler = () => {\r\n        on()\r\n        setTimeout(off, 1000)\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <Button title={'SHOW'} deletestyle={false} onClickFunction={buttonOnclickHandler}/>\r\n            {loading &&  <CircularProgress color=\"secondary\"/>}\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport style from './range.module.scss'\r\n\r\ntype RangePropsType = {\r\n    value: number\r\n    name: string\r\n    min: number\r\n    max: number\r\n    step: number\r\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nexport const Range = React.memo((props: RangePropsType) => {\r\n\r\n\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.screen}>{props.value}</div>\r\n            <input type={'range'}\r\n                   value={props.value}\r\n                   name={props.name}\r\n                   min={props.min}\r\n                   max={props.max}\r\n                   step={props.step}\r\n                   onChange={props.onChange}\r\n            />\r\n            <label htmlFor={props.name}>{props.name}</label>\r\n        </div>\r\n    )\r\n})","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n    },\r\n});\r\n\r\nfunction valuetext(value: number) {\r\n    return `${value}`;\r\n}\r\n\r\nexport const DoubleRangeSlider = (props:any) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Simple range\r\n            </Typography>\r\n            <Slider\r\n                value={props.value}\r\n                onChange={props.handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {Range} from \"../common/Range/Range\";\r\nimport style from \"./RangeHometask.module.scss\";\r\nimport Button from \"../common/button/Button\";\r\nimport {DoubleRangeSlider} from \"../common/DoubleRange\";\r\n\r\nexport const RangeHometask = (props:any) => {\r\n\r\n    const onClickHandler = () => {\r\n\r\n    }\r\n\r\n    const onChangeRangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(Number.parseInt(e.currentTarget.value))\r\n    }\r\n    const [value, setValue] = useState(0)\r\n\r\n    const [value1, setValue2] = React.useState<number[]>([20, 37]);\r\n    const handleChange = (event: any, newValue: number | number[]) => {\r\n        setValue2(newValue as number[]);\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <DoubleRangeSlider handleChange={handleChange}\r\n                               value={value1}\r\n            />\r\n            <Range name={\"price\"}\r\n                   value={value}\r\n                   max={100}\r\n                   min={1}\r\n                   step={1}\r\n                   onChange={onChangeRangeHandler}\r\n            />\r\n\r\n            <Button title={\"Send\"} deletestyle={false} onClickFunction={onClickHandler}/>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\nimport background from './assets/images/background.jpg'\nimport './App.css';\nimport Message from \"./HT-1-message/Message\";\nimport Links from \"./links/Links\";\nimport { Route } from 'react-router-dom';\nimport Todolist from \"./HT-2-todolist/Todolist\";\nimport InputHT from \"./HT-3-input/InputHT\";\nimport {Hometask4} from \"./HT-4-EditebleSpan/Hometask4\";\nimport {Hometask6} from \"./HT-6-Local-Storage/Hometask-6\";\nimport {Hometask7} from \"./HT-7-Select/Hometask7\";\nimport {ReducerHT} from \"./HT-8-Reducers/Reducer\";\nimport {Time} from \"./HT-9-time/Time\";\nimport {Loading} from \"./HT-10-Loading/Loading\";\nimport {RangeHometask} from \"./HT-11-Range/RangeHometask\";\n\n\nfunction App(props:any) {\n\n\n\n  return (\n    <div className='parent' style={{ backgroundImage:`url(${background})` }}>\n\n        <Links/>\n        <Route path='/homework1' render = {() => <Message avatar={\"V\"}\n                                                          name={'Viki'}\n                                                          message={\"are u at home??\"}\n                                                          time={'21:44'}/>}/>\n        <Route path='/homework2' render = {() => <Todolist/>}/>\n        <Route path='/homework3' render = {() => <InputHT/> }/>\n        <Route path='/homework4' render = {() => <Hometask4/>}/>\n        {/*<Route path='/homework5' render = {() => }/>*/}\n        <Route path='/homework6' render = {() => <Hometask6/>}/>\n        <Route path='/homework7' render = {() => <Hometask7/>}/>\n        <Route path='/homework8' render = {() => <ReducerHT/>}/>\n        <Route path='/homework9' render = {() => <Time/>}/>\n        <Route path='/homework10' render = {() => <Loading/>}/>\n        <Route path='/homework11' render = {() => <RangeHometask/>}/>\n        {/*<Route path='/homework12' render = {() => }/>*/}\n        {/*<Route path='/homework13' render = {() => }/>*/}\n        {/*<Route path='/homework14' render = {() => }/>*/}\n        {/*<Route path='/homework15' render = {() => }/>*/}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers, createStore} from \"redux\";\r\nimport {Homework10Reducer} from \"../reducers/homework10-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    homework10: Homework10Reducer\r\n})\r\n\r\nexport const store = createStore(rootReducer);\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\n\n\nReactDOM.render(\n      <Provider store={store}>\n          <HashRouter>\n              <App />\n          </HashRouter>\n      </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}